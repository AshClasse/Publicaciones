{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "PubsContext": "data source=DESKTOP-2MA536R;Initial Catalog=PubsGerEntities;Integrated Security=true;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False"
  },
  "ValidationMessage": {
    //Author Validation Messages
    "authorNameRequired": "El nombre del autor es requerido.",
    "authorLengthName": "La longitud del campo nombre debe ser de 20 o menos.",
    "authorLNameRequired": "El apellido del autor es requerido.",
    "authorLengthLName": "La longitud del campo apellido debe ser de 40 o menos.",
    "authorPhoneRequired": "El telefono del autor es requerido",


    //TitleAuthors Validation Messages
    "authorIsInexistent": "El autor es inexistente.",
    "titleIsInexistent": "El título es inexistente.",

    // Para ambos
    "idIsRequired": "La combinación de Ids es incorrecta, al menos uno no existe en la base de datos."
  },
  "AuthorSuccessMessages": {
    "SaveSucces": "El autor fue guardado exitosamente.",
    "GetByIDSuccess": "El autor fue identicado por su Id.",
    "RemoveSuccess": "El autor fue removido exitosamente.",
    "UpdateSuccess": "El autor fue actualizado exitósamente.",
    "GetByCitySuccess": "Se encontraron autores en esta ciudad.",
    "GetByStateSuccess": "Se encontraron autores en este estado",
    "GetByContractSuccess": "Se identificaron autores con este contract.",
    "GetAllSuccess": "Los autores fueron obtenidos de correctamente."
  },
  "AuthorErrorMessages": {
    "SaveError": "Ocurrió un error guardando el autor.",
    "GetByIdError": "Ocurrió un error obteniento el autor.",
    "RemoveError": "Ocurrió un error removiendo el estudiante.",
    "UpdateError": "Ocurrió un error actualizando el estudiante.",
    "GetByCityError": "Ocurrió un error obteniento los autores.",
    "GetByStateError": "Ocurrió un error obteniento los autores.",
    "GetByContractError": "Ocurrió un error obteniento los autores.",
    "GetAllError": "Ocurrió un error obteniento los autores."
  },
  "TitleAuthorSuccessMessages": {
    "SaveSucces": "El TitleAuthor fueron guardado de manera exitosa",
    "GetTitleAuthorByIDSuccess": "El TitleAuthor fue obtenido de manera exitosa",
    "RemoveSuccess": "El TitleAuthor fue removido de manera exitosa",
    "UpdateSuccess": "El TitleAuthor fue actualizado de manera exitosa.",
    "GetAllSuccess": "Los TitleAuthors fueron obtenidos de manera exitosa",
    "GetTitlesAuthorByTitleSuccess": "El TitleAuthors fue obtenido de manera exitosa",
    "GetTitlesAuthorByRoyaltySuccess": "El TitleAuthors fue obtenido de manera exitosa",
    "GetTitlesAuthorByAuthorOrderSuccess": "El TitleAuthors fue obtenido de manera exitosa",
    "GetTitlesByAu_IDSuccess": "El TitleAuthors fue obtenido de manera exitosa"
  },
  "MensajesTitleAuthorError": {
    "SaveError": "Ocurrió un error guardando el TitleAuthor.",
    "GetTitleAuthorByIDError": "Ocurrió  un error obteniendo el TitleAuthor por ID.",
    "RemoveError": "Ocurrió un error removiendo el TitleAuthor.",
    "UpdateError": "Ocurrió un error actualizando el TitleAuthor.",
    "GetAllError": "Ocurrió un error obteniendo los TitleAuthors.",
    "GetTitlesAuthorByTitleError": "Ocurrió un error obteniendo el TitleAuthor por el titulo.",
    "GetTitlesAuthorByRoyaltyError": "Ocurrió un error obteniendo el TitleAuthor por su Royalty.",
    "GetTitlesAuthorByAuthorOrderError": "Ocurrió un error obteniendo el los titulos del autor en orden.",
    "GetTitlesByAu_IDËrror": "Ocurrió un error obteniendo los titulos del autor en orden."
  }
}
