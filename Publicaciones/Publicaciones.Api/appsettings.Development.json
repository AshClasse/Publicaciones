{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "ConnectionStrings": {
    "PubsContext": "data source=LAPTOP-ASHLEY;Initial Catalog=PubsMyEntities;Integrated Security=true;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False"
  },
  "ValidationMessage": {
    "changeUserIsPositiveInt": "User ID must be a positive number.",
    "changeDateFormat": "Date format must be yyyy-MM-dd HH:mm:ss.fffffff",

    // Titles Validation Messages
    "titleIDRequired": "Title ID is required.",
    "titleIDIsPositiveInt": "Titles ID must be a positive number.",
    "titleTypeRequired": "Titles type is required.",
    "titleNameRequired": "A title is required.",
    "titleTypeContainsOnlyLetters": "Titles type only accepts letters.",
    "titleContainsOnlyLetters": "The title only accepts letters.",
    "titleTypeLength": "Titles type field length should be a maximum of 12 characters.",
    "titleLength": "The title field length should be a maximum of 80 characters.",
    "titlePubIdIsPositiveInt": "Pub ID must be a positive number.",
    "titlePriceIsDecimal": "Titles price must be in decimal format.",
    "titleAdvanceIsDecimal": "Titles advance must be in decimal format.",
    "titleRoyaltyIsPositiveInt": "Titles royalty must be a positive number.",
    "titleYtdSalesIsPositiveInt": "Titles ytd_sales must be a positive number.",
    "titleNotesContainsOnlyLetters": "Titles notes only accepts letters.",
    "titleNotesLength": "Titles notes field length should be a maximum of 200 characters.",
    "titlePubDateFormat": "Publication date should be in the following format: 'YYYY-MM-DD HH:mm:ss.fff.",

    // RoySched Validation Messages
    "roySchedTitleIDRequired": "RoyScheds Title ID is required.",
    "roySchedIDRequired": "RoySched ID is required.",
    "roySchedTitleIDIsInt": "RoyScheds Title ID must be a number.",
    "roySchedIDIsInt": "RoySched ID must be a number.",
    "roySchedTitleIdIsPositiveInt": "Titles ID must be a positive number.",
    "roySchedIdIsPositiveInt": "RoySched ID must be a positive number.",
    "roySchedloRangeIsInt": "RoyScheds low range must be a number.",
    "roySchedHiRangeIsInt": "RoyScheds high range must be a number.",
    "roySchedRoyaltyIsInt": "RoyScheds royalty must be a number.",

    // PubInfo Validation Messages
    "pubInfoIDRequired": "PubInfo ID is required.",
    "pubInfoIDIsPositiveInt": "PubInfo ID must be positive number.",
    "pubInfoIDIsInt": "PubInfo ID must be number.",
    "pubInfoPubIDIsPositiveInt": "Publisher ID must be positive number.",
    "pubInfoContainsOnlyLetters": "PubInfos only accepts letters.",
    "pubInfoLogoIsByte": "PubInfos logo must be in a byte format because it's an image.",

    // Existance Validation Messages
    "pubIdExists": "Non-Existent Publisher.",
    "pubInfoIdExists": "Non-Existent PubInfoId.",
    "titleIdExists": "Non-Existent Title.",
    "roySchedIdExists": "Non-Existent Title RoySchedID."

  },
  "TitlesSuccessMessage": {
    "getAllSuccessMessage": "All titles have been successfully obtained.",
    "getByIdSuccessMessage": "The title has been successfully obtained.",
    "addSuccessMessage": "The title has been successfully saved.",
    "updateSuccessMessage": "The title has been successfully updated.",
    "removeSuccessMessage": "The title has been successfully removed."
  },
  "TitlesErrorMessage": {
    "getAllErrorMessage": "An error has ocurred while obtaining the titles.",
    "getByIdErrorMessage": "An error has ocurred while obtaining the title.",
    "addErrorMessage": "An error has occured while saving the title.",
    "updateErrorMessage": "An error has occured while updating the title.",
    "removeErrorMessage": "An error has occured while removing the title."
  },
  "RoySchedSuccessMessage": {
    "getAllSuccessMessage": "All royScheds have been successfully obtained.",
    "getByIdSuccessMessage": "The roySched has been successfully obtained.",
    "addSuccessMessage": "The roySched has been successfully saved.",
    "updateSuccessMessage": "The roySched has been successfully updated.",
    "removeSuccessMessage": "The title has been successfully removed."
  },
  "RoySchedErrorMessage": {
    "getAllErrorMessage": "An error has ocurred while obtaining the royScheds.",
    "getByIdErrorMessage": "An error has ocurred while obtaining the roySched.",
    "addErrorMessage": "An error has occured while saving the roySched.",
    "updateErrorMessage": "An error has occured while updating the roySched.",
    "removeErrorMessage": "An error has occured while removing the roySched."
  },
  "PubInfoSuccessMessage": {
    "getAllSuccessMessage": "All pubInfos have been successfully obtained.",
    "getByIdSuccessMessage": "The pubInfo has been successfully obtained.",
    "addSuccessMessage": "The pubInfo has been successfully saved.",
    "updateSuccessMessage": "The pubInfo has been successfully updated.",
    "removeSuccessMessage": "The title has been successfully removed."
  },
  "PubInfoErrorMessage": {
    "getAllErrorMessage": "An error has ocurred while obtaining the pubInfos.",
    "getByIdErrorMessage": "An error has ocurred while obtaining the pubInfo.",
    "addErrorMessage": "An error has occured while saving the pubInfo.",
    "updateErrorMessage": "An error has occured while updating the pubInfo.",
    "removeErrorMessage": "An error has occured while removing the pubInfo."
  }
}
