{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "PubsContext": "Server=LAPTOP-598SERVC;Database=pubs;User ID=storepubs;Password=pubsstore;MultipleActiveResultSets=true"
  },
  "ApiSettings": {
    "DiscountApiBaseUrl": "http://localhost:5196/api/Discount/",
    "SaleApiBaseUrl": "http://localhost:5196/api/Sale/",
    "StoreApiBaseUrl": "http://localhost:5196/api/Store/"
  },
  "ValidationMessage": {
    "changeUserIsPositiveInt": "User ID must be a positive number.",
    "changeDateFormat": "Date format must be yyyy-MM-dd HH:mm:ss.fffffff",
    "discountIDIsInt": "Discount ID must be a number.",
    "discountIDIsPositiveInt": "Discount ID must be a positive number.",
    "discountTypeRequired": "Discount type is required.",
    "discountTypeContainsOnlyLetters": "Discount type only accepts letters.",
    "discountTypeLength": "Discount type field length should be a maximum of 40 characters.",
    "storeIDIsPositiveInt": "Store ID must be positive number.",
    "storeIDIsInt": "Store ID must be number.",
    "lowQtyIsShort": "Low quantity must be a number.",
    "highQtyIsShort": "High quantity must be a number.",
    "discountAmountIsDecimal": "Discount amount must be in decimal format.",
    "ordNumRequired": "Number of the order is required.",
    "ordNumFormat": "Order number must have this format ORD###",
    "ordNumLength": "Number of the order field length should be a maximum of 20 characters.",
    "ordDateFormat": "Order date should be in the following format: 'YYYY-MM-DD HH:mm:ss.fff.",
    "qtyIsShort": "Quantity must be a number.",
    "qtyIsPositiveInt": "Quantity must be a positive number.",
    "paytermsRequired": "Payterms are required.",
    "paytermsIsString": "Payterms must be in text format.",
    "paytermsLength": "Payterms field length should be a maximum of 12 characters.",
    "titleIDRequired": "Title ID is required.",
    "titleIDIsPositiveInt": "Title ID must be positive number.",
    "titleIDIsInt": "Title ID must be a number.",
    "storeNameRequired": "Store name is required.",
    "storeNameLength": "Store name field length should be a maximum of 40 characters.",
    "storeAddressRequired": "Store address is required.",
    "storeAddressContainsOnlyLetters": "Store address only accepts letters.",
    "storeAddressLength": "The store address field length should be a maximum of 40 characters.",
    "cityRequired": "City is required.",
    "cityContainsOnlyLetters": "Store address only accepts letters.",
    "cityLength": "City field length should be a maximum of 20 characters.",
    "stateRequired": "State is required.",
    "stateContainsOnlyLetters": "State only accepts letters.",
    "stateLength": "State field length should be maximum of 2 characters.",
    "zipRequired": "Zip is required.",
    "zipLength": "Zip field length should be maximum of 5 characters.",
    "zipContainsOnlyNumbers": "Zip only accepts numbers."
  },
  "DiscountSuccessMessage": {
    "addSuccessMessage": "The discount has been successfully saved.",
    "updateSuccessMessage": "The discount has been successfully updated.",
    "removeSuccessMessage": "The discount has been successfully removed."
  },
  "DiscountErrorMessage": {
    "getAllDiscountsErrorMessage": "An error has ocurred while obtaining the discounts.",
    "getDiscountErrorMessage": "An error has ocurred while obtaining the discount.",
    "addErrorMessage": "An error has occured while saving the discount.",
    "updateErrorMessage": "An error has occured while updating the discount.",
    "removeErrorMessage": "An error has occured while removing the discount."
  },
  "SaleSuccessMessage": {
    "addSuccessMessage": "The sale has been successfully saved.",
    "updateSuccessMessage": "The sale has been successfully updated.",
    "removeSuccessMessage": "The discount has been successfully removed."
  },
  "SaleErrorMessage": {
    "addErrorMessage": "An error has occured while saving the sale.",
    "updateErrorMessage": "An error has occured while updating the sale.",
    "removeErrorMessage": "An error has occured while removing the sale."
  },
  "StoreSuccessMessage": {
    "addSuccessMessage": "The store has been successfully saved.",
    "updateSuccessMessage": "The store has been successfully updated.",
    "removeSuccessMessage": "The discount has been successfully removed."
  },
  "StoreErrorMessage": {
    "addErrorMessage": "An error has occured while saving the store.",
    "updateErrorMessage": "An error has occured while updating the store.",
    "removeErrorMessage": "An error has occured while removing the store."
  }
}
